@model e_commercedotNet.Models.User
@{
    ViewData["Title"] = "Inscription";
}

<div class="register-container">
    <div class="register-card">
        <div class="register-header">
            <h2 class="text-center mb-4">
                <i class="bi bi-person-plus me-2"></i>Créer un compte
            </h2>
        </div>

        <!-- Messages de notification -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle-fill me-2"></i>
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Formulaire d'inscription -->
        <form method="post" class="register-form">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <div class="form-floating">
                        <input asp-for="Nom" class="form-control" id="floatingNom" placeholder="Nom" required />
                        <label for="floatingNom">
                            <i class="bi bi-person me-2"></i>Nom
                        </label>
                        <span asp-validation-for="Nom" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-floating">
                        <input asp-for="Prenom" class="form-control" id="floatingPrenom" placeholder="Prénom" required />
                        <label for="floatingPrenom">
                            <i class="bi bi-person me-2"></i>Prénom
                        </label>
                        <span asp-validation-for="Prenom" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Email" class="form-control" id="floatingEmail" placeholder="nom@exemple.com" required />
                <label for="floatingEmail">
                    <i class="bi bi-envelope me-2"></i>Adresse email
                </label>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Password" type="password" class="form-control" id="floatingPassword" placeholder="Mot de passe" required />
                <label for="floatingPassword">
                    <i class="bi bi-lock me-2"></i>Mot de passe
                </label>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="termsCheckbox" required>
                <label class="form-check-label" for="termsCheckbox">
                    J'accepte les <a href="#" class="text-primary">conditions d'utilisation</a>
                </label>
            </div>

            <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-lg">
                    <i class="bi bi-person-plus me-2"></i>S'inscrire
                </button>
            </div>

            <div class="text-center mt-3">
                <p class="text-muted">
                    Vous avez déjà un compte ?
                    <a asp-controller="Account" asp-action="Login" class="text-primary">
                        Connectez-vous
                    </a>
                </p>
            </div>
        </form>
    </div>
</div>

<style>
    .register-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: calc(100vh - 200px);
        background-color: #f4f6f9;
        padding: 2rem 0;
    }

    .register-card {
        width: 100%;
        max-width: 500px;
        padding: 2rem;
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

        .register-card:hover {
            transform: translateY(-5px);
        }

    .register-header {
        margin-bottom: 1.5rem;
    }

        .register-header h2 {
            color: #2c3e50;
            font-weight: bold;
        }

    .register-form .form-floating > label {
        color: #7f8c8d;
        transition: all 0.3s ease;
    }

    .register-form .form-control:focus {
        box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
        border-color: #3498db;
    }

        .register-form .form-control:focus + label {
            color: #3498db;
        }

    .btn-primary {
        background-color: #3498db;
        border-color: #3498db;
        transition: all 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #2980b9;
            border-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

    .register-form a {
        text-decoration: none;
        transition: color 0.3s ease;
    }

        .register-form a:hover {
            color: #2980b9;
        }

    .form-check-input:checked {
        background-color: #3498db;
        border-color: #3498db;
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password strength validation
            const passwordInput = document.getElementById('floatingPassword');
            passwordInput.addEventListener('input', function() {
                const password = this.value;
                const strengthIndicator = document.getElementById('passwordStrength');

                if (password.length < 8) {
                    this.setCustomValidity('Le mot de passe doit contenir au moins 8 caractères');
                } else if (!/[A-Z]/.test(password)) {
                    this.setCustomValidity('Le mot de passe doit contenir au moins une majuscule');
                } else if (!/[a-z]/.test(password)) {
                    this.setCustomValidity('Le mot de passe doit contenir au moins une minuscule');
                } else if (!/[0-9]/.test(password)) {
                    this.setCustomValidity('Le mot de passe doit contenir au moins un chiffre');
                } else {
                    this.setCustomValidity('');
                }
            });
        });
    </script>
}