@model IEnumerable<e_commercedotNet.Models.Product>

@{
    ViewData["Title"] = "Home Page";
    var categoryFilter = ViewData["Category"]?.ToString();
    var priceMinFilter = ViewData["PriceMin"]?.ToString();
    var priceMaxFilter = ViewData["PriceMax"]?.ToString();
}@{
    var errorMessage = TempData["ErrorMessage"] as string;
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}


<div class="text-center">
    <h1 class="display-4">Welcome to Our Product Store</h1>
    <p>Explore our range of products!</p>
</div>
<!-- Filter Section -->
<div class="row mb-3">
    <div class="col-md-12">
        <!-- Form with asp-action and asp-controller tag helpers -->
        <form method="get" asp-action="Index" asp-controller="Home">
            <div class="row">
                <!-- Category Filter -->
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="Category" class="filter-label">Category</label>
                        <select class="form-control" id="Category" name="Category">
                            <option value="">All Categories</option>
                            <option value="Femme">Femme</option>
                            <option value="Homme">Homme</option>
                        </select>
                    </div>
                </div>

                <!-- Price Range Filter -->
                <div class="col-md-6">
                    <label for="PriceMin" class="filter-label">Price Range</label>
                    <div class="row form-group">
                        <div class="col-md-6">
                            <input type="number" class="form-control" id="PriceMin" name="PriceMin" placeholder="Min Price" value="@priceMinFilter" />
                        </div>
                        <div class="col-md-6">
                            <input type="number" class="form-control" id="PriceMax" name="PriceMax" placeholder="Max Price" value="@priceMaxFilter" />
                        </div>
                    </div>
                </div>

                <!-- Apply Filters Button -->
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-success btn-lg w-100">Apply Filters</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Product List Section -->
@if (Model.Any())
{
    <div class="row">
        @foreach (var product in Model)
        {
            <!-- Only show products where category matches the filter -->
            @if (string.IsNullOrEmpty(categoryFilter) || product.Category == categoryFilter)
            {
                <div class="col-md-4 mb-4">
                    <div class="card product-card">
                        @if(!string.IsNullOrEmpty(product.ImageUrl))
                        {
							<img src="@product.ImageUrl" alt="@product.Name" />
                        }
                        else{
                            <span>aucun image</span>

                        }
                             <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">@product.Description</p>
                            <p class="card-text"><strong>Price:</strong> @product.Price &euro;</p>
                            <p class="card-text"><strong>Category:</strong> @product.Category</p>
                            <a href="@Url.Action("Details", "Product", new { id = product.ProductId })">Voir les détails</a>

                        </div>
                    </div>
                </div>
            }
        }
    </div>
}
else
{
    <p>No products available.</p>
}

<!-- Custom Styles -->
<style>
    .product-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease-in-out;
    }

    .product-card:hover {
        transform: scale(1.05);
    }

    .card-img-top {
        max-height: 200px;
        object-fit: cover;
        border-bottom: 2px solid #ddd;
    }

    .filter-label {
        font-weight: bold;
        color: #333;
    }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ccc;
        padding: 0.75rem;
    }

    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

    .btn-success:hover {
        background-color: #218838;
        border-color: #1e7e34;
    }

    .row.mb-3 {
        margin-top: 20px;
    }
    
    .col-md-3 {
        margin-bottom: 10px;
    }

    .col-md-3 .form-group label {
        font-weight: bold;
        font-size: 1rem;
    }

    .card-body h5 {
        font-size: 1.25rem;
        color: #333;
    }

    .card-body p {
        color: #666;
    }

    .text-center h1 {
        color: #333;
        font-family: 'Arial', sans-serif;
    }

    .text-center p {
        color: #777;
    }

    /* Ensure form fields have consistent height and spacing */
    .form-group input, .form-group select {
        height: 45px;
    }

    .form-group .form-control {
        margin-bottom: 15px;
    }
</style>
