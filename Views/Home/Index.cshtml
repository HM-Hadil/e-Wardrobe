@model IEnumerable<e_commercedotNet.Models.Product>

@{
    ViewData["Title"] = "Home Page";
    var categoryFilter = ViewData["Category"]?.ToString();
    var priceMinFilter = ViewData["PriceMin"]?.ToString();
    var priceMaxFilter = ViewData["PriceMax"]?.ToString();
}

@{
    var errorMessage = TempData["ErrorMessage"] as string;
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<div class="text-center" style="margin-top:2rem">
    <h1 class="display-4">Welcome to Our Product Store</h1>
    <p>Explore our range of products!</p>
</div>

<!-- Filter Section -->
<div class="row mb-3">
    <div class="col-md-12">
        <form method="get" asp-action="Index" asp-controller="Home">
            <div class="row">
                <!-- Category Filter -->
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="Category" class="filter-label">Category</label>
                        <select class="form-control" id="Category" name="Category">
                            <option value="">All Categories</option>
                            <option value="Femme">Femme</option>
                            <option value="Homme">Homme</option>
                        </select>
                    </div>
                </div>

                <!-- Price Range Filter -->
                <div class="col-md-6">
                    <label for="PriceMin" class="filter-label">Price Range</label>
                    <div class="row form-group">
                        <div class="col-md-6">
                            <input type="number" class="form-control" id="PriceMin" name="PriceMin" placeholder="Min Price" value="@priceMinFilter" />
                        </div>
                        <div class="col-md-6">
                            <input type="number" class="form-control" id="PriceMax" name="PriceMax" placeholder="Max Price" value="@priceMaxFilter" />
                        </div>
                    </div>
                </div>

                <!-- Apply Filters Button -->
                <div class="col-md-3 d-flex align-items-end" >
                    <button type="submit" class="btn btn-success btn-lg w-100">Apply Filters</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Product List Section -->
@if (Model.Any())
{
    <div class="row">
        @foreach (var product in Model)
        {
            <!-- Only show products where category matches the filter -->
            @if (string.IsNullOrEmpty(categoryFilter) || product.Category == categoryFilter)
            {
                <div class="col-md-4 mb-4">
                    <div class="card product-card">
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img src="@product.ImageUrl" alt="@product.Name" class="card-img-top product-image" />
                        }
                        else
                        {
                            <div class="no-image">No image available</div>
                        }
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">@product.Description</p>
                            <p class="card-text"><strong>Price:</strong> @product.Price &euro;</p>
                            <p class="card-text"><strong>Category:</strong> @product.Category</p>
                            <a href="@Url.Action("Details", "Product", new { id = product.ProductId })" class="btn btn-primary">Voir les détails</a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
}
else
{
    <p>No products available.</p>
}

<!-- Custom Styles -->
<style>
    /* Color Palette */
    :root {
        --primary-color: #2c3e50;
        --secondary-color: #3498db;
        --accent-color: #2ecc71;
        --text-color: #333;
        --background-color: #f4f6f7;
        --card-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
    }

    body {
        background-color: var(--background-color);
        font-family: 'Inter', 'Segoe UI', Roboto, sans-serif;
        line-height: 1.6;
    }

    /* Welcome Section */
    .text-center {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 2rem;
        border-radius: 10px;
        margin-bottom: 2rem;
        box-shadow: var(--card-shadow);
    }

        .text-center h1 {
            font-weight: 700;
            letter-spacing: -0.5px;
            margin-bottom: 1rem;
        }

        .text-center p {
            color: rgba(255, 255, 255, 0.8);
            font-size: 1.1rem;
        }

    /* Filter Section */
    .filter-section {
        background-color: white;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: var(--card-shadow);
        margin-bottom: 2rem;
    }

    .filter-label {
        color: var(--primary-color);
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .form-control {
        border: 2px solid rgba(44, 62, 80, 0.1);
        transition: all 0.3s ease;
        border-radius: 6px;
    }

        .form-control:focus {
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
        }

    /* Product Cards */
    .product-card {
        border: none;
        border-radius: 12px;
        overflow: hidden;
        transition: all 0.4s ease;
        box-shadow: var(--card-shadow);
    }

        .product-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 12px 20px rgba(0, 0, 0, 0.1);
        }

    .card-img-top {
        height: 250px;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .product-card:hover .card-img-top {
        transform: scale(1.05);
    }

    .no-image {
        background-color: #e9ecef;
        color: var(--primary-color);
        font-style: italic;
    }

    .card-body {
        padding: 1.5rem;
        background-color: white;
    }

    .card-title {
        color: var(--primary-color);
        font-weight: 600;
        margin-bottom: 0.75rem;
    }

    .card-text {
        color: #6c757d;
    }

    /* Buttons */
    .btn-success, .btn-primary {
        border-radius: 6px;
        text-transform: uppercase;
        font-weight: 600;
        letter-spacing: 0.5px;
        padding: 0.75rem 1.5rem;
        transition: all 0.3s ease;
    }

    .btn-success {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
    }

        .btn-success:hover {
            background-color: #27ae60;
            border-color: #27ae60;
        }

    .btn-primary {
        background-color: var(--secondary-color);
        border-color: var(--secondary-color);
    }

        .btn-primary:hover {
            background-color: #2980b9;
            border-color: #2980b9;
        }


</style>